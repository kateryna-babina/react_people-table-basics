{"version":3,"sources":["api.ts","components/PersonLink/PersonLink.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/Loader/Loader.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNavLink/PageNavLink.tsx","components/Navigation/Navigation.tsx","components/NotFoundPage/NotFoundPage.tsx","components/HomePage/HomePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","_ref","person","sex","name","slug","_jsx","Link","to","concat","className","classNames","children","PersonRow","isSelected","born","died","fatherName","motherName","mother","father","_jsxs","PeopleTable","people","selectedPerson","map","Loader","PeoplePage","_useState","useState","_useState2","_slicedToArray","setPeople","_useState3","_useState4","errorMessage","setErrorMessage","_useState5","_useState6","isLoading","setIsLoading","_useParams$slug","useParams","loadPeople","_asyncToGenerator","_regeneratorRuntime","mark","_callee","peopleFromServer","peopleArray","wrap","_context","prev","next","sent","personCopy","_objectSpread","find","mom","dad","t0","message","finish","stop","apply","arguments","useEffect","length","PageNavLink","title","NavLink","_ref2","isActive","classnames","Navigation","role","NotFoundPage","HomePage","App","Routes","Route","path","element","Navigate","replace","index","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.c10a73ae.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport { Person } from '../../types';\n\ntype PersonLinkProps = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<PersonLinkProps> = ({ person }) => {\n  const {\n    sex,\n    name,\n    slug,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype PersonProps = {\n  person: Person;\n  isSelected: boolean;\n};\n\nexport const PersonRow: React.FC<PersonProps> = ({ person, isSelected }) => {\n  const {\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={slug}\n      className={classNames({\n        'has-background-warning': isSelected,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? <PersonLink person={mother} />\n          : motherName || '-'}\n      </td>\n      <td>\n        {father\n          ? <PersonLink person={father} />\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonRow } from '../PersonRow';\n\ntype PeopleTableProps = {\n  people: Person[],\n  selectedPerson: string;\n};\n\nexport const PeopleTable: React.FC<PeopleTableProps> = ({\n  people,\n  selectedPerson,\n}) => {\n  const isSelected = (person: Person) => (\n    person.slug === selectedPerson\n  );\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonRow person={person} isSelected={isSelected(person)} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable';\nimport { Loader } from '../Loader';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { slug = '' } = useParams();\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n    try {\n      const peopleFromServer = await getPeople();\n\n      const peopleArray = peopleFromServer.map((person) => {\n        const personCopy = { ...person };\n        const mother = peopleFromServer.find((mom) => (\n          mom.name === person.motherName\n        ));\n\n        const father = peopleFromServer.find((dad) => (\n          dad.name === person.fatherName\n        ));\n\n        if (mother) {\n          personCopy.mother = mother;\n        }\n\n        if (father) {\n          personCopy.father = father;\n        }\n\n        return personCopy;\n      });\n\n      setPeople(peopleArray);\n    } catch (error) {\n      setErrorMessage((error as Error).message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {people.length > 0 && !isLoading && !errorMessage\n            && <PeopleTable people={people} selectedPerson={slug} />}\n\n          {people.length === 0 && !isLoading && !errorMessage && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {errorMessage\n            && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import classnames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype PageNavLinkProps = {\n  to: string,\n  title: string;\n};\n\nexport const PageNavLink: FC<PageNavLinkProps> = ({ to, title }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => classnames('navbar-item',\n        { 'has-background-grey-lighter': isActive })}\n      to={to}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" title=\"Home\" />\n\n          <PageNavLink to=\"/people\" title=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { HomePage } from './components/HomePage';\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<HomePage />}\n        />\n        <Route\n          path=\"/home\"\n          element={<Navigate to=\"/\" replace />}\n        />\n\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route\n          path=\"*\"\n          element={<NotFoundPage />}\n        />\n      </Routes>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}